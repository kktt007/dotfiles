# https://github.com/alswl/Rime/blob/master/default.custom.yaml
# /usr/share/rime-data 才是系统级的,~/.config/fcitx/rime 才是用户级的
# [Home · rime/home Wiki](https://github.com/rime/home/wiki)
patch:
  schema_list:
    - {schema: pinyin_simp}
    - {schema: wubi98_ci}
    - {schema: wubi98_dz}
#    - {schema: flypy}

  "menu/page_size": 5

#  "style/horizontal": false #这项要在fcitx设置中才行
# [F4, "Control+grave"]
  
  switcher:
    caption: "〔切换输入法〕"
    hotkeys: [F4]

  key_binder/bindings:
    - {accept: semicolon, send: 2, when: has_menu}
    - {accept: apostrophe, send: 3, when: has_menu}
    - {accept: comma, send: KP_Up, when: has_menu}
    - {accept: period, send: KP_Down, when: has_menu}
    - {accept: bracketleft, send: Page_Up, when: paging}
    - {accept: bracketright, send: Page_Down, when: has_menu}
    #- {accept: "Control+slash", toggle: simplification, when: always}
    #- {accept: "Control+backslash", toggle: extended_charset, when: always}
    #- {accept: "Control+p", send: Up, when: composing}
    #- {accept: "Control+n", send: Down, when: composing}
    #- {accept: "Control+b", send: Left, when: composing}
    #- {accept: "Control+f", send: Right, when: composing}
    #- {accept: "Control+a", send: Home, when: composing}
    #- {accept: "Control+e", send: End, when: composing}
    #- {accept: "Control+d", send: Delete, when: composing}
    #- {accept: "Control+k", send: "Shift+Delete", when: composing}
    #- {accept: "Control+h", send: BackSpace, when: composing}
    #- {accept: "Control+g", send: Escape, when: composing}
    #- {accept: "Control+bracketleft", send: Escape, when: composing}
    #- {accept: "Alt+v", send: Page_Up, when: composing}
    #- {accept: "Control+v", send: Page_Down, when: composing}
    #- {accept: ISO_Left_Tab, send: "Shift+Left", when: composing}
    #- {accept: "Shift+Tab", send: "Shift+Left", when: composing}
    #- {accept: Tab, send: "Shift+Right", when: composing}
    #- {accept: minus, send: Page_Up, when: has_menu}
    #- {accept: equal, send: Page_Down, when: has_menu}
    #- {accept: "Control+Shift+1", select: .next, when: always}
    #- {accept: "Control+Shift+2", toggle: ascii_mode, when: always}
    #- {accept: "Control+Shift+3", toggle: full_shape, when: always}
    #- {accept: "Control+Shift+4", toggle: simplification, when: always}
    #- {accept: "Control+Shift+5", toggle: extended_charset, when: always}
    #- {accept: "Control+Shift+exclam", select: .next, when: always}
    #- {accept: "Control+Shift+at", toggle: ascii_mode, when: always}
    #- {accept: "Control+Shift+numbersign", toggle: full_shape, when: always}
    #- {accept: "Control+Shift+dollar", toggle: simplification, when: always}
    #- {accept: "Control+Shift+percent", toggle: extended_charset, when: always}
    #- {accept: "Shift+space", toggle: full_shape, when: always}
    #- {accept: "Control+period", toggle: ascii_punct, when: always}
    #- {accept: "Control+Shift+space", select: .next, when: always}
    #- {accept: "Shift+space", toggle: ascii_mode, when: always}
    #- {accept: "Control+comma", toggle: full_shape, when: always}
